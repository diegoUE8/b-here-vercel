/**
 * @license beta-bhere-development v1.0.25
 * (c) 2023 Luca Zampetti <lzampetti@gmail.com>
 * License: MIT
 */
!function(e){"function"==typeof define&&define.amd?define(e):e()}((function(){"use strict";const e={Progress:"progress",Complete:"complete"},t={},n={};function o(e,t,n){self.postMessage({type:e,assets:t,data:n})}self.addEventListener("message",(function(r){const s=r.data.id,f=r.data.assets;if(!s)return;if(s&&!f){const e=n[s];return void(e&&e.abort())}if(!f.length)return;if("undefined"==typeof Promise)return;if("function"!=typeof fetch)return;const i={mode:"cors"};if(self.AbortController){const e=new AbortController;i.signal=e.signal,n[s]=e}return function(e,t){const n=e.length;let o=0;"function"==typeof t&&t({loaded:o,total:n});for(const r of e)r.then((()=>{o++,"function"==typeof t&&t({loaded:o,total:n})}));return Promise.all(e)}(f.map((e=>function(e,n){return new Promise(((o,r)=>{t[e]?o(e):fetch(e,n).then((function(n){t[e]=!0,o(e)}),(function(e){r(e)}))}))}(e,i))),(function(t){o(e.Progress,f,t)})).then((function(t){delete n[s],o(e.Complete,f)})).catch((function(e){console.log("PrefetchServiceWorker.onMessage.error",e)}))}))}));
//# sourceMappingURL=prefetch.service.worker.min.js.map